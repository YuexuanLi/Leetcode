//https://leetcode.com/problems/longest-substring-without-repeating-characters/
//left为左边界，i为右边界，从左边界开始，利用contains()判断hashset里面是否已有此元素，如果没有就加进去，并且取max长度；
//如果已有此元素，若此char前面无元素则直接将left右移一位，若有，则删掉前面所有元素再右移。
public class Solution {  
    public int lengthOfLongestSubstring(String s) {
        if (s == null || s.length() == 0) {
            return 0;
        }
        
        HashSet<Character> set = new HashSet<Character>();
        int left = 0, max = 0;
        
        for (int i = 0; i < s.length(); i++) {
            if (set.contains(s.charAt(i))) {
                while (left < i && s.charAt(left) != s.charAt(i)) {
                    set.remove(s.charAt(left));
                    left++;
                }
                left++;
            } else {
                set.add(s.charAt(i));
                max = Math.max(max, i - left + 1);
            }
        }
        return max;
    }
}
