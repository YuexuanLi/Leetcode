/**
 * Definition for binary tree
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public ArrayList<Integer> preorderTraversal(TreeNode root) {
        ArrayList<Integer> result = new ArrayList<Integer>();
        if (root == null) {
            return result;
        }
        preorder(root, result);
        return result;
    }
    
    private void preorder(TreeNode root, ArrayList<Integer> traverse) {
        if (root == null) {    //递归程序将边界判断和异常判断放在上面一层
            return;
        }
        
        traverse.add(root.val);
        preorder(root.left, traverse);
        preorder(root.right, traverse);
        
        return;
    }
}
