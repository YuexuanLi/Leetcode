public class Solution {//https://oj.leetcode.com/problems/permutations/
    public ArrayList<ArrayList<Integer>> permute(int[] num) {
        ArrayList<ArrayList<Integer>> result = new ArrayList<ArrayList<Integer>>();
        ArrayList<Integer> list = new ArrayList<Integer>();
        permutation(result, list, num);
        return result;
    }
    public void permutation(ArrayList<ArrayList<Integer>> result, ArrayList<Integer> list, int[] num) {
        if (list.size() == num.length) {
            result.add(new ArrayList<Integer>(list));
            return;
        }
        for (int i = 0; i < num.length; i++) {
            if (list.contains(num[i])) {
                continue;
            }
            list.add(num[i]);
            permutation(result, list, num);
            list.remove(list.size() - 1);
        }
    }
}
