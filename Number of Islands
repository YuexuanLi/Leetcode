//题意：一个只包含字符0和1的二维数组，找出里面不相邻的只包含1的块的个数。
//思路：DFS、BFS。只要遍历一遍，碰到一个1，就把它周围所有相连的1都标记为非1，这样整个遍历过程中碰到的1的个数就是所求解。
public class Solution {
    private int m, n;
    public int numIslands(char[][] grid) {
        if (grid == null || grid.length == 0 || grid[0].length == 0) {
            return 0; 
        }
        m = grid.length;
        n = grid[0].length;
        int result = 0;
        
        for (int i = 0; i < m; i++) {
            for (int j = 0; j < n; j++) {
                if (grid[i][j] != '1') {
                    continue;
                }
                result++;
                dfs(grid, i, j);
            }
        }
        return result;
    }
    
    private void dfs(char[][] grid, int i, int j) {
        if (i < 0 || i >= m || j >= n || j < 0) {
            return;
        }
        
        if (grid[i][j] == '1') {
            grid[i][j] = 2;
            
            dfs(grid, i - 1, j);
            dfs(grid, i + 1, j);
            dfs(grid, i, j - 1);
            dfs(grid, i, j + 1);
        }
    }
}
