//https://leetcode.com/problems/valid-palindrome/
public class Solution {
    public boolean isPalindrome(String s) {
        if (s == null || s.length() == 0) {
            return true;
        }
        
        char[] update = s.toCharArray();
        int start = 0;
        int end = s.length() - 1;
        
        while (start < end) {
            if (!isValid(update[start])) {
                start++;
                continue;
            }
            if (!isValid(update[end])) {
                end--;
                continue;
            }
            
            if (update[start] == update[end] || Math.abs((int)update[end] - (int)update[start]) == 32) {
                start++;
                end--;
            } else {
                return false;
            }
        }
        return true;
    }
    
    private boolean isValid(char c) {
        if ((c >= 'A' && c <= 'Z') || (c >= 'a' && c <= 'z') || (c >= '0' && c<= '9')) {
            return true;
        }
        return false;
    }
}
